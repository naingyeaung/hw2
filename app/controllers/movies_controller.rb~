class MoviesController < ApplicationController

  def show
    id = params[:id] # retrieve movie ID from URI route
    @movie = Movie.find(id) # look up movie by unique ID
    # will render app/views/movies/show.<extension> by default
  end

  def index
    session["init"] = true
    @change_date = false
    @change_title = false
    @all_ratings = Movie.allratings()
    @all_checked = true
    @cache = Hash.new()
    called = false
    if (params[:sort_by] == nil and session.has_key?(:sort_by))
        params[:sort_by] = session[:sort_by]
    end
    if (params[:ratings] == nil and session.has_key?(:ratings))
        params[:ratings] = session[:ratings]
    end
    if (params[:sort_by] == "date")
        @movies = Movie.find(:all, :order => "release_date")
        @change_date = true
        @change_title = false
        session[:sort_by] = "date"
        called = true
    end
    if (params[:sort_by] == "title")
        @movies = Movie.find(:all, :order => "title")
        @change_title = true
        @change_date = false
        session[:sort_by] = "title"
        called = true
    end
    if (params[:ratings] and !params[:sort_by]) # called the first time
        chosen = params[:ratings]
        session[:ratings] = chosen
        if (chosen != nil)
          ratings = chosen.keys
          @movies = Array.new
          ratings.each do |rating|
            @movies.concat(Movie.find(:all, :conditions => ["rating = ?", rating]))
            @cache[rating] = true
            @all_checked = false
          end
        end
        called = true
    end
    #to be deleted
    if (params[:ratings] and params[:sort_by])
        chosen = params[:ratings]
        session[:ratings] = chosen        
        if (chosen != nil)
            ratings = chosen.keys
            holder = Array.new
            ratings.each do |ratin|
              holder.concat(@movies.find_all{|movie| movie.rating == ratin})
              @cache[ratin] = true
              @all_checked = false
            end
            @movies = holder
        end
    end 

    if (!called and (session.has_key?(:ratings) or session.has_key?(:sort_by)))
        flash.keep        
        index
    else
        if (!called)
          @movies = Movie.find(:all)
        end
    end
  end

  def new
    # default: render 'new' template
  end

  def create
    @movie = Movie.create!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully created."
    redirect_to movies_path
  end

  def edit
    @movie = Movie.find params[:id]
  end

  def update
    @movie = Movie.find params[:id]
    @movie.update_attributes!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully updated."
    redirect_to movie_path(@movie)
  end

  def destroy
    @movie = Movie.find(params[:id])
    @movie.destroy
    flash[:notice] = "Movie '#{@movie.title}' deleted."
    redirect_to movies_path
  end

end
